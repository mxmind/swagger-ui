{"swagger":"2.0","info":{"version":"1.1.4.RELEASE","title":"UTILA API","contact":{"name":"admin@utila.us"},"license":{"name":"admin@utila.us"}},"host":"test.utila.us","basePath":"/api","tags":[{"name":"task-progress","description":"TaskProgress REST Controller"},{"name":"login","description":"Login REST Controller"},{"name":"task-alerts","description":"TaskAlert REST Controller"},{"name":"user-rating","description":"UserRating REST Controller"},{"name":"tag-classes","description":"TagClass REST Controller"},{"name":"client-provider-relation","description":"ClientProviderRelation REST Controller"},{"name":"client-provider-library-item-relation","description":"ClientProviderLibraryItemRelation REST Controller"},{"name":"user-folder","description":"UserFolder REST Controller"},{"name":"tasks","description":"Task REST Controller"},{"name":"twilio","description":"SMS Response Handler REST Controller"},{"name":"administrators","description":"Admin REST Controller"},{"name":"security-questions","description":"SecurityQuestion REST Controller"},{"name":"task-diagrams","description":"Task Diagrams REST Controller"},{"name":"forgot-password","description":"Forgot Password REST Controller"},{"name":"task-templates","description":"TaskTemplate REST Controller"},{"name":"task-comments","description":"TaskComment REST Controller"},{"name":"providers","description":"Provider REST Controller"},{"name":"activities","description":"Activity REST Controller"},{"name":"organizations","description":"Organization REST Controller"},{"name":"library-item","description":"LibraryItem REST Controller"},{"name":"clients","description":"Client REST Controller"},{"name":"contact-us","description":"Contact Us REST Controller"}],"paths":{"/activities":{"get":{"tags":["activities"],"summary":"Finds unread activities for authorized user","description":"This method finds all unread notifications for authorized user","operationId":"findUnreadActivitiesByLoggedInUserUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"Notifications were found","schema":{"type":"array","items":{"$ref":"#/definitions/Activity"}}}}},"post":{"tags":["activities"],"summary":"Mark activities as read","description":"This method marks given activities as read and returns collection of updated activities","operationId":"markActvitiesReadUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"activities","description":"Activities that should be updated","required":true,"schema":{"$ref":"#/definitions/Iterable«Activity»"}}],"responses":{"200":{"description":"Activities was successfully updated","schema":{"type":"array","items":{"$ref":"#/definitions/Activity"}}}}}},"/activities/all":{"get":{"tags":["activities"],"summary":"Finds all notifications for user","description":"This method finds all activities for authorized user","operationId":"findAllActivitiesByLoggedInUserUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"Notifications were found","schema":{"type":"array","items":{"$ref":"#/definitions/Activity"}}}}}},"/administrators":{"post":{"tags":["administrators"],"summary":"Adds administrator","description":"Adds administrator to the current organization","operationId":"addAdminUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"adminRegistration","description":"adminRegistration","required":true,"schema":{"$ref":"#/definitions/AdminRegistration"}}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/administrators/{id}":{"post":{"tags":["administrators"],"summary":"Update existing administrator","description":"This method performs update of administrator.","operationId":"updateUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Id of administrator that should be updated","required":true,"type":"integer","format":"int64"},{"in":"body","name":"administrator","description":"Administrator object with updated fields","required":true,"schema":{"$ref":"#/definitions/Administrator"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Administrator"}}}}},"/clientProvider":{"get":{"tags":["client-provider-relation"],"summary":"Find all client provider relations","description":"Find all client provider relations by current user","operationId":"findAllUsingGET_1","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ClientProviderRelation"}}}}},"post":{"tags":["client-provider-relation"],"summary":"Create or update client provider relation","description":"This method creates or updates client provider relation","operationId":"createUsingPOST_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"clientProviderRelation","description":"Client provider object that should be created","required":true,"schema":{"$ref":"#/definitions/ClientProviderRelation"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClientProviderRelation"}}}}},"/clientProvider/currentProvider{?client}":{"get":{"tags":["client-provider-relation"],"summary":"Find client provider relation for current provider","description":"Find client provider relation by client and provider","operationId":"findForCurrentProviderUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"client","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClientProviderRelation"}}}}},"/clientProvider/getRelationIdByClient{?clientId}":{"get":{"tags":["client-provider-relation"],"summary":"Get relation id by client","description":"Get relation id by client id. Returns empty map if client with given id doesn't exist.","operationId":"getRelationIdByClientUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}}}}},"/clientProvider/otherProviders{?client}":{"get":{"tags":["client-provider-relation"],"summary":"Find other providers","description":"Find other providers by given client id. Returns empty list if client with given id doesn't exist","operationId":"findOtherProvidersUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"client","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ClientProviderRelation"}}}}}},"/clientProvider/{id}":{"post":{"tags":["client-provider-relation"],"summary":"Update client provider relation","description":"Update client provider relation","operationId":"updateUsingPOST_2","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Client provider id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"clientProviderRelation","description":"Client provider object that should be updated","required":true,"schema":{"$ref":"#/definitions/ClientProviderRelation"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClientProviderRelation"}}}}},"/clientProvider/{id}/resendNotification":{"post":{"tags":["client-provider-relation"],"summary":"Send email notification","description":"Send email notification and returns true if message was sent, otherwise returns false","operationId":"resendNotificationUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Client provider id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/clientProviderLibraryItem":{"post":{"tags":["client-provider-library-item-relation"],"summary":"Create client provider library item relations","description":"This method creates client provider library item relations by given list","operationId":"createUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"rels","description":"List of client provider library item relations that should be created","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/ClientProviderLibraryItemRelation"}}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ClientProviderLibraryItemRelation"}}}}}},"/clientProviderLibraryItem/delete{?clientId,ids}":{"delete":{"tags":["client-provider-library-item-relation"],"summary":"Delete client provider library item relation","description":"Delete client provider library item relation by client id and library item ids","operationId":"deleteItemsUsingDELETE","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"},{"name":"ids","in":"query","description":"List of library item's ids that should be deleted","required":true,"type":"array","items":{"type":"integer","format":"int64"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK"}}}},"/clientProviderLibraryItem/{id}":{"post":{"tags":["client-provider-library-item-relation"],"summary":"Update client provider library item relation","description":"This method updates client provider library item relation","operationId":"updateUsingPOST_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Client provider library item relation id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"rel","description":"Client provider library item relation object with updated fields","required":true,"schema":{"$ref":"#/definitions/ClientProviderLibraryItemRelation"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ClientProviderLibraryItemRelation"}}}},"delete":{"tags":["client-provider-library-item-relation"],"summary":"Delete client provider library item relation","description":"This method deletes client provider library item relation by given id","operationId":"deleteUsingDELETE","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Client provider library item relation id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/clientProviderLibraryItem/{libraryItem}":{"get":{"tags":["client-provider-library-item-relation"],"summary":"Find all client provider library item relations","description":"Find all client provider library item relations by library item id","operationId":"findAllUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"libraryItem","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ClientProviderLibraryItemRelation"}}}}}},"/clientProviderLibraryItem{?client,libraryItem}":{"delete":{"tags":["client-provider-library-item-relation"],"summary":"Delete client provider library item relation","description":"Delete client provider library item relation by client id and library item id","operationId":"deleteRelationUsingDELETE","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"client","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"},{"name":"libraryItem","in":"query","description":"Library item id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/clientProviderLibraryItem{?provider,libraryItem}":{"get":{"tags":["client-provider-library-item-relation"],"summary":"Find all client provider library item relation","description":"Find all client provider library item relation by library item id and provider id. Returns empty list if provider with given id doesn't exist","operationId":"findAllClientsOfCurrentProviderByLibraryItemUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"provider","in":"query","description":"Provider id","required":true,"type":"integer","format":"int64"},{"name":"libraryItem","in":"query","description":"Library item id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ClientProviderLibraryItemRelation"}}}}}},"/clients":{"post":{"tags":["clients"],"summary":"Create new client","description":"This method creates new client from given client model.","operationId":"createUsingPOST_2","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"client","description":"Client that should be created","required":true,"schema":{"$ref":"#/definitions/Client"}}],"responses":{"200":{"description":"Client was successfully created","schema":{"$ref":"#/definitions/Client"}}}}},"/clients/initialPlanUpdate/{id}":{"post":{"tags":["clients"],"summary":"Update existing client during creating initial plan","description":"Update client on the end of initial plan creating. This endpoint is used only to mark update operation. This method performs safe update of client if it already exists, otherwise it returns given client object without changes.","operationId":"initialPlanUpdateUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Id of client that should be updated","required":true,"type":"integer","format":"int64"},{"in":"body","name":"client","description":"Client object with updated fields","required":true,"schema":{"$ref":"#/definitions/Client"}}],"responses":{"200":{"description":"Client was successfully updated","schema":{"$ref":"#/definitions/Client"}}}}},"/clients/search/findByFullName":{"get":{"tags":["clients"],"summary":"Search client by full name","description":"Case insensitive search client by his full name","operationId":"findByFullNamePartCaseInsensitiveUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"fullName","description":"Full name of client to search","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Client with given id was not found"},"200":{"description":"Client was found","schema":{"type":"array","items":{"$ref":"#/definitions/Client"}}}}}},"/clients/search/findByUserName":{"get":{"tags":["clients"],"summary":"Search client by username","description":"This method searches client by given client username","operationId":"findByUserNameUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"userName","description":"Username of client to search","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Client with given id was not found"},"200":{"description":"Client was found","schema":{"$ref":"#/definitions/Client"}}}}},"/clients/{id}":{"get":{"tags":["clients"],"summary":"Search client by id","description":"This method searches client by given client id","operationId":"findOneUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Id of client to search","required":true,"type":"integer","format":"int64"}],"responses":{"404":{"description":"Client with given id was not found"},"200":{"description":"Client was found","schema":{"$ref":"#/definitions/Client"}}}},"post":{"tags":["clients"],"summary":"Update existing client","description":"This method performs safe update of client if it already exists, otherwise it returns given client object without changes.","operationId":"updateUsingPOST_3","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Id of client that should be updated","required":true,"type":"integer","format":"int64"},{"in":"body","name":"client","description":"Client object with updated fields","required":true,"schema":{"$ref":"#/definitions/Client"}}],"responses":{"200":{"description":"Client was successfully updated","schema":{"$ref":"#/definitions/Client"}}}}},"/contactUs":{"post":{"tags":["contact-us"],"summary":"Send email with contact information","description":"Send an email to admin with details of contacting","operationId":"sendEmailWithContactInformationUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"contactUs","description":"ContactUs object","required":true,"schema":{"$ref":"#/definitions/ContactUs"}}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}},"500":{"description":"Name or Email fields are empty"}}}},"/forgotPassword":{"post":{"tags":["forgot-password"],"summary":"Reset password","description":"This method resets password for given user and notifies this user by email","operationId":"resetPasswordUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"user","description":"User whose password should be reset","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/forgotPassword/listSQ":{"post":{"tags":["forgot-password"],"summary":"Find list of security questions","description":"This method finds list of security questions for given user","operationId":"getSecurityQuestionsUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"userName","description":"Username of user","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/SecurityQuestion"}}}}}},"/forgotPassword/update":{"post":{"tags":["forgot-password"],"summary":"Update password","description":"This method update password for given user and notifies this user by email","operationId":"updatePasswordUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"passwordReset","description":"Password reset object that contains old and new password","required":true,"schema":{"$ref":"#/definitions/PasswordReset"}}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/libraryItems/assigned/tag/{id}":{"post":{"tags":["library-item"],"summary":"Add assigned tag","description":"Add assigned tag to the library item with specified id","operationId":"addAssignedTagUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"tag","description":"Tag object that should be added","required":true,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/LibraryItem"}}}}},"/libraryItems/delete{?ids}":{"delete":{"tags":["library-item"],"summary":"Delete library items list","description":"Delete library items list by list of library item ids","operationId":"deleteItemsUsingDELETE_1","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"ids","in":"query","description":"List of library item ids that should be deleted","required":true,"type":"array","items":{"type":"integer","format":"int64"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK"}}}},"/libraryItems/redirect":{"get":{"tags":["library-item"],"summary":"Redirect for library item url","description":"Redirect for library item url by client id and library item id","operationId":"redirectUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK"}}}},"/libraryItems/search/findAllOrderByStatusAsc":{"get":{"tags":["library-item"],"summary":"Find all library items ordered by status","description":"Find all library items ordered by status column","operationId":"findAllOrderByStatusAscUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/LibraryItem"}}}}},"/libraryItems/search/findByClient{?client}":{"get":{"tags":["library-item"],"summary":"Find content item by client","description":"Find content item by client id and page","operationId":"findByClientUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"client","in":"query","description":"Client id","required":false,"type":"integer","format":"int64"},{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ContentItem"}}}}}},"/libraryItems/search/findByKeywordForUser{?keyword}":{"get":{"tags":["library-item"],"summary":"Find content items by keyword","description":"Find all content items by keyword and page","operationId":"findByKeywordForProviderUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"keyword","in":"query","description":"Keyword to search library items","required":false,"type":"string"},{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ContentItem"}}}}}},"/libraryItems/search/findByKeyword{?keyword,tags}":{"get":{"tags":["library-item"],"summary":"Find content items by keyword and tag ids","description":"Find all content items by keyword, list of tag ids and page. Returns empty list if filters are empty.","operationId":"findByKeywordUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"keyword","in":"query","description":"Keyword to search library items","required":false,"type":"string"},{"name":"tags","in":"query","description":"List of tag ids","required":false,"type":"string"},{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/ContentItem"}}}}}},"/libraryItems/search/findByStatusAndKeyword{?status,keyword}":{"get":{"tags":["library-item"],"summary":"Find content items by keyword and status","description":"Find content items by keyword, status and page","operationId":"findByStatusAndKeyWordUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"status","in":"query","description":"Status of library item","required":true,"type":"string","enum":["SUBMITTED","APPROVED","REJECTED","REMOVED"]},{"name":"keyword","in":"query","description":"Keyword to search library items","required":true,"type":"string"},{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ContentItem"}}}}},"/libraryItems/search/findByStatus{?status}":{"get":{"tags":["library-item"],"summary":"Find content items by status","description":"Find content items by status and page","operationId":"findByStatusUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"status","in":"query","description":"Status of library item","required":true,"type":"string","enum":["SUBMITTED","APPROVED","REJECTED","REMOVED"]},{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ContentItem"}}}}},"/libraryItems/search/findLibraryItemsByTags{?tags}":{"get":{"tags":["library-item"],"summary":"Find library items by tags","description":"Find library items by given tag ids list. Returns map with two entries: possible keys = 'ASSIGNED' and 'SUGGESTED', values - list of library items","operationId":"findLibraryItemsByTagsUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"tags","in":"query","description":"List of tag ids","required":true,"type":"array","items":{"type":"integer","format":"int64"},"collectionFormat":"multi"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/LibraryItem"}}}}},"/libraryItems/search/findPreviousLibraryItems{?client}":{"get":{"tags":["library-item"],"summary":"Find library item assigned to client previously","description":"Returs the list of all library items assigned by current provider.","operationId":"findPreviousLibraryItemsUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"client","in":"query","description":"clientId","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}}}},"/libraryItems/search/findTotalLibrarySizeForProvider":{"get":{"tags":["library-item"],"summary":"Find total library size for provider","description":"Find total library size for provider by given user id","operationId":"findTotalLibrarySizeForProviderUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"createdBy","description":"Provider object, whose library items should be found","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"OK","schema":{"type":"integer","format":"int64"}}}}},"/libraryItems/search/myFiles":{"get":{"tags":["library-item"],"summary":"Find files created by authorized user","description":"Find all files created by authorized user","operationId":"findMyFilesUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}}}},"/libraryItems/suggested/tag/{id}":{"post":{"tags":["library-item"],"summary":"Add suggested tag","description":"Add suggested tag to the library item with specified id","operationId":"addSuggestedTagUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"tag","description":"Tag object that should be added","required":true,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/LibraryItem"}}}}},"/libraryItems/tag":{"delete":{"tags":["library-item"],"summary":"Delete library item relation with tag","description":"Delete relation between library item and tag by given libraryItemTag id","operationId":"deleteTagUsingDELETE","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"id","description":"Library item tag id","required":true,"schema":{"$ref":"#/definitions/LibraryItemTagId"}}],"responses":{"200":{"description":"OK"}}}},"/libraryItems/update{?folderId}":{"post":{"tags":["library-item"],"summary":"Update list of library items","description":"Update list of library items","operationId":"updateUsingPOST_4","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"folderId","in":"query","description":"Folder id","required":false,"type":"integer","format":"int64"},{"in":"body","name":"libraryItems","description":"List of library items that should be updated","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}}}},"/libraryItems/{id}":{"get":{"tags":["library-item"],"summary":"Find library item","description":"Find library item by id","operationId":"findOneUsingGET_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/LibraryItem"}}}},"delete":{"tags":["library-item"],"summary":"Delete single library item","description":"Delete single library item by id. Returns true if library item was deleted, otherwise returns false","operationId":"deleteUsingDELETE_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/libraryItems/{id}/viewUrl":{"get":{"tags":["library-item"],"summary":"View library item URL","description":"View library item URL by given library item id. Returns map with one entry, key = 'viewUrl', value = URL","operationId":"viewUrlUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/libraryItems/{id}{?folderId}":{"post":{"tags":["library-item"],"summary":"Update single library item","description":"Update single library item","operationId":"updateUsingPOST_5","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"folderId","in":"query","description":"Folder id","required":false,"type":"integer","format":"int64"},{"name":"id","in":"path","description":"Library item id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"libraryItem","description":"Library item object","required":true,"schema":{"$ref":"#/definitions/LibraryItem"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/LibraryItem"}}}}},"/libraryItems{?folderId}":{"post":{"tags":["library-item"],"summary":"Save library items in folder","description":"Save library items in folder by folder id and list of library items","operationId":"createUsingPOST_3","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"folderId","in":"query","description":"Folder id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"libraryItems","description":"List of library items that should be created","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}},"500":{"description":"Library item with given name already uploaded by current user"}}}},"/organizations":{"post":{"tags":["organizations"],"summary":"Create organization and admin","description":"Create organization and admin for this organization","operationId":"createOrganizationAndAdminUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"orgRegistration","description":"Organization registration object","required":true,"schema":{"$ref":"#/definitions/OrganizationRegistration"}}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/providers":{"post":{"tags":["providers"],"summary":"Create new provider","description":"This method creates new provider from given provider model.","operationId":"createUsingPOST_4","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"provider","description":"Provider that should be created","required":true,"schema":{"$ref":"#/definitions/Provider"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Provider"}}}}},"/providers/search/findAllOrderByStatusAsc":{"get":{"tags":["providers"],"summary":"Search all providers","description":"This method finds all providers ordered by status","operationId":"findAllOrderByStatusAscUsingGET_1","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Provider"}}}}}},"/providers/search/findByStatus":{"get":{"tags":["providers"],"summary":"Search provider by status","description":"This method searches provider by given provider status","operationId":"findByProviderStatusUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"status","description":"Status of provider to search","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Provider"}}}}}},"/providers/search/findByUserName":{"get":{"tags":["providers"],"summary":"Search provider by username","description":"This method searches provider by given provider username","operationId":"findByUserNameUsingGET_1","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"userName","description":"Username of provider to search","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Provider"}}}}},"/providers/{id}":{"get":{"tags":["providers"],"summary":"Search provider by id","description":"This method searches provider by given client id","operationId":"findOneUsingGET_2","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Id of provider to search","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Provider"}}}},"post":{"tags":["providers"],"summary":"Update existing provider","description":"This method performs update of provider.","operationId":"updateUsingPOST_6","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Id of provider that should be updated","required":true,"type":"integer","format":"int64"},{"in":"body","name":"provider","description":"Provider object with updated fields","required":true,"schema":{"$ref":"#/definitions/Provider"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Provider"}}}}},"/securityQuestions":{"get":{"tags":["security-questions"],"summary":"Find all questions","description":"Find list of all security questions","operationId":"findAllUsingGET_2","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/SecurityQuestion"}}}}}},"/securityQuestions/{id}":{"get":{"tags":["security-questions"],"summary":"Find question by id","description":"Find security question by given id","operationId":"findOneUsingGET_3","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Security question id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SecurityQuestion"}}}}},"/tagClasses":{"get":{"tags":["tag-classes"],"summary":"Find all tag classes","description":"Find list of all tag classes ordered by tag class id. All tags inside are ordered by displayOrder field","operationId":"findAllUsingGET_3","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TagClass"}}}}},"post":{"tags":["tag-classes"],"summary":"Create or update all tag classes","description":"Create or update all tag classes with all related tags","operationId":"createOrUpdateAllUsingPOST","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"tagClasses","description":"List of tag classes that should be created","required":true,"schema":{"$ref":"#/definitions/Iterable«TagClass»"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TagClass"}}}}}},"/tagClasses/{id}":{"get":{"tags":["tag-classes"],"summary":"Find tag class","description":"Find tag class by id","operationId":"findOneUsingGET_4","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Tag class id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TagClass"}}}},"post":{"tags":["tag-classes"],"summary":"Update tag class","description":"Update tag class","operationId":"updateUsingPOST_7","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Tag class id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"tagClass","description":"Tag class object that should be updated","required":true,"schema":{"$ref":"#/definitions/TagClass"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TagClass"}}}},"delete":{"tags":["tag-classes"],"summary":"Delete tag class","description":"Delete tag class by id","operationId":"deleteUsingDELETE_2","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Tag class id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/taskAlerts/search/findByClientAndDate{?clientId,currentDate}":{"get":{"tags":["task-alerts"],"summary":"Find task alerts by client and date","description":"Find task alerts list by client id and date","operationId":"findByClientAndDateUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"},{"name":"currentDate","in":"query","description":"Current date","required":true,"type":"string","format":"date-time"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskAlert"}}}}}},"/taskAlerts/search/findByClient{?clientId}":{"get":{"tags":["task-alerts"],"summary":"Find task alerts by client","description":"Find task alerts list by given client id","operationId":"findByClientUsingGET_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskAlert"}}}}}},"/taskAlerts/{id}":{"get":{"tags":["task-alerts"],"summary":"Find task alert","description":"Find task alert by id","operationId":"findOneUsingGET_5","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task alert id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskAlert"}}}},"post":{"tags":["task-alerts"],"summary":"Update task alert","description":"Update task alert. Returns updated task alert.","operationId":"updateUsingPOST_8","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task alert id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"taskAlert","description":"Task alert object that should be updated","required":true,"schema":{"$ref":"#/definitions/TaskAlert"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskAlert"}}}}},"/taskComment":{"post":{"tags":["task-comments"],"summary":"Create or update task comment","description":"Create or update task comment","operationId":"createUsingPOST_5","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"taskComment","description":"Task Comment object that should be created","required":true,"schema":{"$ref":"#/definitions/TaskComment"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskComment"}}}}},"/taskComment/search/findByClient{?clientId}":{"get":{"tags":["task-comments"],"summary":"Find task comments by client","description":"Find task comments by client id","operationId":"findByClientUsingGET_2","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskComment"}}}}}},"/taskComment/search/findByTask{?taskId}":{"get":{"tags":["task-comments"],"summary":"Find task comments by task","description":"Find task comments list by task id","operationId":"findByTaskUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"taskId","in":"query","description":"Task Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskComment"}}}}}},"/taskComment/{id}/maxId":{"get":{"tags":["task-comments"],"summary":"Find task comments","description":"Find all task comments for specified task after comment with given id","operationId":"findCommentsUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Comment Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskComment"}}}}}},"/taskDiagrams/getCompletionPlanPercentageInfos":{"get":{"tags":["task-diagrams"],"summary":"Find completion plan percentage infos","description":"Find list of completion plan percentage infos for authorized provider","operationId":"getCompletionPlanPercentageInfosUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/CompletionPlanPercentageDto"}}}}}},"/taskDiagrams/getMetricInfoByClient{?clientId}":{"get":{"tags":["task-diagrams"],"summary":"Find metrics by client","description":"Find list of metrics info by client id. Returns empty list if client with given id doesn't exist","operationId":"getMetricInfoByClientUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/MetricDiagramDto"}}}}}},"/taskDiagrams/getMetricRateByClient{?clientId,metricId}":{"get":{"tags":["task-diagrams"],"summary":"Find metric rate by client","description":"Find metric rate by client id and metric id.","operationId":"getMetricRateByClientUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"},{"name":"metricId","in":"query","description":"Metric Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/MetricRateDto"}}}}},"/taskDiagrams/getTaskDiagramInfoByClient":{},"/taskDiagrams/getTaskInfoByClient{?clientId}":{"get":{"tags":["task-diagrams"],"summary":"Find tasks info by client","description":"Find list of tasks info by client id. Returns empty list if client with given id doesn't exist","operationId":"getTaskInfoByClientUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskDiagramDto"}}}}}},"/taskDiagrams/getTaskRateByClient{?clientId,taskId}":{"get":{"tags":["task-diagrams"],"summary":"Find task rate by client","description":"Find task rate by client id and task id. Returns map with key = 'taskRate' and task rate as value, or 0 if client doesn't exist","operationId":"getTaskRateByClientUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"},{"name":"taskId","in":"query","description":"Task Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"integer","format":"int32"}}}}},"/taskProgress":{"post":{"tags":["task-progress"],"summary":"Create task progresses","description":"Create task progresses by given list. Returns list of created task progresses.","operationId":"createUsingPOST_6","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"taskProgresses","description":"Task progresses list that should be created","required":true,"schema":{"$ref":"#/definitions/Iterable«TaskProgress»"}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskProgress"}}}}}},"/taskProgress/search/findByClient{?clientId}":{"get":{"tags":["task-progress"],"summary":"Find task progresses","description":"Find list of task progresses by client id","operationId":"findByClientUsingGET_3","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskProgress"}}}}}},"/taskProgress/search/findByTask{?taskId}":{"get":{"tags":["task-progress"],"summary":"Find task progresses","description":"Find list of task progresses by task id","operationId":"findByTaskUsingGET_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"taskId","in":"query","description":"Task Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskProgress"}}}}}},"/taskTemplates":{"post":{"tags":["task-templates"],"summary":"Create task template","description":"Create task template. Returns created task template","operationId":"createUsingPOST_7","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"template","description":"Task Template that should be created","required":true,"schema":{"$ref":"#/definitions/TaskTemplate"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskTemplate"}}}}},"/taskTemplates/all":{"get":{"tags":["task-templates"],"summary":"Find all task and metric templates","description":"Find list of all task and metric templates for current organization","operationId":"findAllUsingGET_4","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskTemplate"}}}}}},"/taskTemplates/assigned/tag/{id}":{"post":{"tags":["task-templates"],"summary":"Add assigned tag to task template","description":"Add assigned tag to task template with given template id","operationId":"addAssignedTagUsingPOST_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Template id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"tag","description":"Tag that should be added to template","required":true,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskTemplate"}}}}},"/taskTemplates/createTaskFromTemplate":{},"/taskTemplates/metric":{"get":{"tags":["task-templates"],"summary":"Find all metric templates","description":"Find list of all metric templates for current organization","operationId":"findAllMetricTemplatesUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskTemplate"}}}}}},"/taskTemplates/search/findTemplatesByTagIds{?tags,taskType}":{"get":{"tags":["task-templates"],"summary":"Search templates by tags","description":"Search templates by tags and type. Returns map with keys 'assigned' and 'suggested' and corresponding lists of templates found by these tags in values","operationId":"findTemplatesByTagsAndTypeUsingGET_7","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"tags","in":"query","description":"List of tag ids to search task templates","required":true,"type":"array","items":{"type":"integer","format":"int64"},"collectionFormat":"multi"},{"name":"taskType","in":"query","description":"Type of task","required":true,"type":"string","enum":["TASK","METRIC"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskTemplate"}}}}},"/taskTemplates/search/prepareTasksFromTemplatesByTagIds{?clientId,tags,taskType}":{"get":{"tags":["task-templates"],"summary":"Get the list of new task created from template","description":"Returns the list of prepared task that are created from templates specifically for current client","operationId":"prepareTaskFromTemplatesByTagIdsUsingGET_7","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"},{"name":"tags","in":"query","description":"List of tag ids to search task templates","required":true,"type":"array","items":{"type":"integer","format":"int64"},"collectionFormat":"multi"},{"name":"taskType","in":"query","description":"Type of task","required":true,"type":"string","enum":["TASK","METRIC"]}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Task"}}}}},"/taskTemplates/suggested/tag/{id}":{"post":{"tags":["task-templates"],"summary":"Add suggested tag to task template","description":"Add suggested tag to task template with given template id","operationId":"addSuggestedTagUsingPOST_1","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Template id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"tag","description":"Tag that should be added to template","required":true,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskTemplate"}}}}},"/taskTemplates/tag":{"delete":{"tags":["task-templates"],"summary":"Delete tag relation with task template","description":"Delete tag relation with task template by id","operationId":"deleteTagUsingDELETE_1","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"id","description":"TaskTemplateId relation object, that should be deleted","required":true,"schema":{"$ref":"#/definitions/TaskTemplateTagId"}}],"responses":{"200":{"description":"OK"}}}},"/taskTemplates/task":{"get":{"tags":["task-templates"],"summary":"Find all task templates","description":"Find list of all task templates for current organization","operationId":"findAllTaskTemplatesUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/TaskTemplate"}}}}}},"/taskTemplates/{id}":{"get":{"tags":["task-templates"],"summary":"Find task template","description":"Find task template by id","operationId":"findOneUsingGET_6","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Template id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskTemplate"}}}},"post":{"tags":["task-templates"],"summary":"Update task template","description":"Update task template","operationId":"updateUsingPOST_9","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Template id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"template","description":"Task Template that should be updated","required":true,"schema":{"$ref":"#/definitions/TaskTemplate"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TaskTemplate"}}}},"delete":{"tags":["task-templates"],"summary":"Delete task template","description":"Delete task template by given id","operationId":"deleteUsingDELETE_3","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Task Template id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK"}}}},"/tasks":{"post":{"tags":["tasks"],"summary":"Create task","description":"Create task","operationId":"createUsingPOST_8","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"task","description":"Task object that should be created","required":true,"schema":{"$ref":"#/definitions/Task"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Task"}}}}},"/tasks/search/findByClient{?clientId,taskType}":{"get":{"tags":["tasks"],"summary":"Find tasks","description":"Find list of tasks by client id and task type","operationId":"findByClientUsingGET_4","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"clientId","in":"query","description":"Client Id","required":true,"type":"integer","format":"int64"},{"name":"taskType","in":"query","description":"Type of task","required":false,"type":"string","enum":["TASK","METRIC"]}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/Task"}}}}}},"/tasks/{id}":{"get":{"tags":["tasks"],"summary":"Find task","description":"Find task by id","operationId":"findOneUsingGET_7","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Task"}}}},"post":{"tags":["tasks"],"summary":"Update task","description":"Update task by given task id and task object","operationId":"updateUsingPOST_10","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"Task Id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"task","description":"Task object that should be updated","required":true,"schema":{"$ref":"#/definitions/Task"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Task"}}}},"delete":{"tags":["tasks"],"summary":"Delete task","description":"Delete task by id","operationId":"deleteUsingDELETE_4","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"id","in":"path","description":"Task Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK"}}}},"/twilio/handleSMSResponse":{"post":{"tags":["twilio"],"summary":"Handle SMS response","description":"Handle SMS response depends on request body content.","operationId":"handleSMSResponseUsingPOST","consumes":["application/json"],"produces":["text/plain"],"responses":{"200":{"description":"OK","schema":{"type":"string"}}}}},"/userFolders":{"post":{"tags":["user-folder"],"summary":"Create user folder","description":"Create user folder","operationId":"createUsingPOST_9","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"userFolder","description":"User Folder that should be created","required":true,"schema":{"$ref":"#/definitions/UserFolder"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserFolder"}}}}},"/userFolders/search/findChildren{?id}":{"get":{"tags":["user-folder"],"summary":"Find content for user folder","description":"Find content for user folder by folder id and page","operationId":"findChildrenUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"query","description":"User Folder Id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"pageable","description":"pageable","required":false,"schema":{"$ref":"#/definitions/Pageable"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ContentItem"}}}}},"/userFolders/{id}":{"get":{"tags":["user-folder"],"summary":"Find user folder","description":"Find user folder by id","operationId":"findOneUsingGET_8","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"User Folder Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserFolder"}}}},"post":{"tags":["user-folder"],"summary":"Update user folder","description":"Update user folder","operationId":"updateUsingPOST_11","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"User Folder Id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"userFolder","description":"User Folder that should be updated","required":true,"schema":{"$ref":"#/definitions/UserFolder"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserFolder"}}}},"delete":{"tags":["user-folder"],"summary":"Delete user folder","description":"Delete user folder by id","operationId":"deleteUsingDELETE_5","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"User Folder Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"type":"boolean"}}}}},"/userRatings":{"get":{"tags":["user-rating"],"summary":"Find all user ratings","description":"Find list of all user ratings","operationId":"findAllUsingGET_5","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/UserRating"}}}}},"post":{"tags":["user-rating"],"summary":"Create user rating","description":"Create user rating","operationId":"createUsingPOST_10","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"userRating","description":"User Rating that should be created","required":true,"schema":{"$ref":"#/definitions/UserRating"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserRating"}}}}},"/userRatings/search/findByLibraryItems":{"get":{"tags":["user-rating"],"summary":"Find user ratings","description":"Find user ratings by library items","operationId":"findByLibraryItemsUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"libraryItems","description":"List of library items to search user ratings","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/UserRating"}}}}}},"/userRatings/search/findClientRatingByLibraryItems":{"get":{"tags":["user-rating"],"summary":"Find client ratings","description":"Find client ratings by library items","operationId":"findClientRatingByLibraryItemsUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"libraryItems","description":"List of library items to search user ratings","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/UserRating"}}}}}},"/userRatings/search/findProviderRatingByLibraryItems":{"get":{"tags":["user-rating"],"summary":"Find provider ratings","description":"Find provider ratings by library items","operationId":"findProviderRatingByLibraryItemsUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"in":"body","name":"libraryItems","description":"List of library items to search user ratings","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}}}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/UserRating"}}}}}},"/userRatings/search/findUserRatingByUserAndLibraryItem{?libraryItem,user}":{"get":{"tags":["user-rating"],"summary":"Find user ratings","description":"Find user ratings by library item id and user id","operationId":"findUserRatingByUserAndLibraryItemUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"libraryItem","in":"query","description":"Library Item Id","required":true,"type":"integer","format":"int64"},{"name":"user","in":"query","description":"User Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserRating"}}}}},"/userRatings/{id}":{"get":{"tags":["user-rating"],"summary":"Find user rating","description":"Find user rating by id","operationId":"findOneUsingGET_9","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"User Rating Id","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserRating"}}}},"post":{"tags":["user-rating"],"summary":"Update user rating","description":"Update user rating","operationId":"updateUsingPOST_12","consumes":["application/json"],"produces":["*/*","application/json"],"parameters":[{"name":"id","in":"path","description":"User Rating Id","required":true,"type":"integer","format":"int64"},{"in":"body","name":"userRating","description":"User Rating that should be updated","required":true,"schema":{"$ref":"#/definitions/UserRating"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/UserRating"}}}}},"/userSession":{"get":{"tags":["login"],"summary":"Get authorized user","description":"Get authorized user","operationId":"createUsingGET","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/User"}}}}},"/userSession/securityQuestions":{"get":{"tags":["login"],"summary":"Get user security questions","description":"Get security questions list by authorized user","operationId":"getSecurityQuestionsUsingGET_7","consumes":["application/json"],"produces":["*/*","application/json"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/USQWithAnswers"}}}}}}},"definitions":{"User":{"required":["fullName","id","status","type","userName"],"properties":{"addressData":{"type":"array","description":"Set with information about user's addresses","items":{"$ref":"#/definitions/AddressData"}},"dob":{"type":"string","format":"date-time","description":"User's date of birth"},"eulaAccepted":{"type":"boolean"},"fullName":{"type":"string","description":"Full Name"},"gender":{"type":"string","description":"Represents user's gender","enum":["UN_KNOWN","MALE","FEMALE"]},"hideHints":{"type":"boolean"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"newPassword":{"type":"string"},"organizations":{"type":"array","description":"Set of organizations to which this user belongs","items":{"$ref":"#/definitions/Organization"}},"passwordExpired":{"type":"boolean","description":"Defines if user password is expired or not"},"privacyStmtRcvd":{"type":"boolean"},"registrationComment":{"type":"string"},"registrationFailureText":{"type":"string"},"rootFolder":{"description":"Root folder for storing media files","$ref":"#/definitions/UserFolder"},"status":{"type":"string","description":"Status of registration","enum":["REGISTRATION_PENDING","ACTIVE","INACTIVE","REGISTRATION_DENIED"]},"type":{"type":"string","description":"Represents type of user","enum":["ADMINISTRATOR","PROVIDER","CLIENT"]},"userName":{"type":"string","description":"Unique user name"},"userSecurityQuestions":{"type":"array","description":"List of user's security questions","items":{"$ref":"#/definitions/UserSecurityQuestion"}}}},"ClientProviderLibraryItemRelation":{"required":["id"],"properties":{"clientProviderRelation":{"$ref":"#/definitions/ClientProviderRelation"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"lastAccessedByClient":{"type":"string","format":"date-time"},"libraryItem":{"$ref":"#/definitions/LibraryItem"}}},"USQWithAnswers":{"properties":{"answer":{"type":"string"},"id":{"type":"integer","format":"int64"},"securityQuestion":{"$ref":"#/definitions/SecurityQuestion"}}},"CompletionPlanPercentageDto":{"properties":{"clientId":{"type":"integer","format":"int64"},"percentage":{"type":"integer","format":"int32"},"thresholdAlerts":{"type":"array","items":{"$ref":"#/definitions/TaskThresholdBadgeDto"}}}},"MetricDto":{"properties":{"beginDate":{"type":"string","format":"date-time"},"createdById":{"type":"integer","format":"int64"},"description":{"type":"string"},"endDate":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64"},"relationId":{"type":"integer","format":"int64"},"status":{"type":"string","enum":["ACTIVE","REMOVED","COMPLETED"]},"taskReminders":{"type":"array","items":{"$ref":"#/definitions/TaskReminder"}},"taskThreshold":{"$ref":"#/definitions/TaskThreshold"},"taskType":{"type":"string","enum":["TASK","METRIC"]},"templateId":{"type":"integer","format":"int64"},"title":{"type":"string"}}},"Iterable«TaskProgress»":{},"Organization":{"required":["clientLabel","domainName","id","name","webSite"],"properties":{"clientLabel":{"type":"string","description":"Unique organization's client label for emails/SMS. If not specified 'Client' will be used"},"domainName":{"type":"string","description":"Unique organization's domain name"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"name":{"type":"string","description":"Unique organization's name"},"webSite":{"type":"string","description":"Unique organization's web site URL"}}},"AddressData":{"required":["email","id"],"properties":{"addressType":{"type":"string","description":"Type of address","enum":["WORK"]},"city":{"type":"string"},"country":{"type":"string"},"email":{"type":"string"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"line1":{"type":"string"},"line2":{"type":"string"},"normalizedPhoneNumber":{"type":"string","description":"Phone number without symbols except digits and with length = 10"},"phoneNumber":{"type":"string"},"state":{"type":"string"},"zipCode":{"type":"string"}}},"Tag":{"required":["id","tagClass","tagName"],"properties":{"displayOrder":{"type":"integer","format":"int32","description":"Order number used for sorting during display on UI"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"tagClass":{"description":"Class to which tag belongs","$ref":"#/definitions/TagClass"},"tagName":{"type":"string","description":"Unique tag name"}}},"TaskAlert":{"required":["id"],"properties":{"alertTime":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"status":{"type":"string","enum":["GENERATED","SENT","ACK"]},"task":{"$ref":"#/definitions/AbstractTask"}}},"UserFolder":{"required":["folderName","id"],"properties":{"folderName":{"type":"string","description":"Folder name"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true}}},"TaskReminder":{"required":["id"],"properties":{"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"reminderDay":{"type":"string","enum":["SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"]},"reminderTimes":{"type":"array","items":{"type":"string"}},"reminderType":{"type":"string","enum":["WEEKLY","MONTHLY","YEARLY"]},"task":{"$ref":"#/definitions/AbstractTask"}}},"TaskProgress":{"required":["id"],"properties":{"createdBy":{"$ref":"#/definitions/User"},"datePerformed":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"numberOfTimes":{"type":"integer","format":"int32"},"task":{"$ref":"#/definitions/AbstractTask"}}},"LibraryItem":{"required":["id"],"properties":{"appprovedBy":{"$ref":"#/definitions/User"},"approvedTime":{"type":"string","format":"date-time"},"assignedTags":{"type":"array","items":{"$ref":"#/definitions/Tag"}},"contentLength":{"type":"integer","format":"int64"},"contentURL":{"type":"string"},"createdBy":{"$ref":"#/definitions/User"},"createdTime":{"type":"string","format":"date-time"},"description":{"type":"string"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"isPrivate":{"type":"boolean"},"mediaType":{"type":"string","enum":["DOC","PDF","AUDIO","YOUTUBE","WEBLINK"]},"mimeType":{"type":"string"},"modifiedTime":{"type":"string","format":"date-time"},"organizations":{"type":"array","items":{"$ref":"#/definitions/Organization"}},"private":{"type":"boolean"},"ratings":{"$ref":"#/definitions/Ratings"},"status":{"type":"string","enum":["SUBMITTED","APPROVED","REJECTED","REMOVED"]},"suggestedTags":{"type":"array","items":{"$ref":"#/definitions/Tag"}},"title":{"type":"string"},"updatedBy":{"$ref":"#/definitions/User"},"uploadURL":{"type":"string"},"uploadedFileName":{"type":"string"}}},"Sort":{},"Administrator":{"required":["fullName","id","status","type","userName"],"properties":{"addressData":{"type":"array","description":"Set with information about user's addresses","items":{"$ref":"#/definitions/AddressData"}},"dob":{"type":"string","format":"date-time","description":"User's date of birth"},"eulaAccepted":{"type":"boolean"},"fullName":{"type":"string","description":"Full Name"},"gender":{"type":"string","description":"Represents user's gender","enum":["UN_KNOWN","MALE","FEMALE"]},"hideHints":{"type":"boolean"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"newPassword":{"type":"string"},"organizations":{"type":"array","description":"Set of organizations to which this user belongs","items":{"$ref":"#/definitions/Organization"}},"passwordExpired":{"type":"boolean","description":"Defines if user password is expired or not"},"privacyStmtRcvd":{"type":"boolean"},"registrationComment":{"type":"string"},"registrationFailureText":{"type":"string"},"rootFolder":{"description":"Root folder for storing media files","$ref":"#/definitions/UserFolder"},"status":{"type":"string","description":"Status of registration","enum":["REGISTRATION_PENDING","ACTIVE","INACTIVE","REGISTRATION_DENIED"]},"type":{"type":"string","description":"Represents type of user","enum":["ADMINISTRATOR","PROVIDER","CLIENT"]},"userName":{"type":"string","description":"Unique user name"},"userSecurityQuestions":{"type":"array","description":"List of user's security questions","items":{"$ref":"#/definitions/UserSecurityQuestion"}}}},"PasswordReset":{"properties":{"newPassword":{"type":"string"},"oldPassword":{"type":"string"}}},"Iterable«CompletionPlanPercentageDto»":{},"Iterable«SecurityQuestion»":{},"ContentItem":{"properties":{"item":{"type":"object"},"lastAccessedByClient":{"type":"string","format":"date-time"},"type":{"type":"string","enum":["FOLDER","LIBRARYITEM"]}}},"Iterable«Activity»":{},"AdminRegistration":{"properties":{"adminEmail":{"type":"string"},"adminName":{"type":"string"}}},"Iterable«TaskTemplate»":{},"TaskThreshold":{"required":["id"],"properties":{"condition":{"type":"string","enum":["SILENCE","LESS_THAN_OR_EQUALS","GREAT_THAN_OR_EQUALS"]},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"limit":{"type":"integer","format":"int32"},"task":{"$ref":"#/definitions/AbstractTask"}}},"Activity":{"required":["id"],"properties":{"activityType":{"type":"string","enum":["PROVIDER_ADDED_CLIENT","PROVIDER_TERMINATED_CLIENT","PROVIDER_UPLOADED_LIBRARYITEM","PROVIDER_UPDATED_LIBRARYITEM","PROVIDER_DELETED_LIBRARYITEM","PROVIDER_SHARED_LIBRARYITEM_TO_CLIENT","PROVIDER_UNSHARED_LIBRARYITEM_TO_CLIENT","PROVIDER_CREATED_TASK","PROVIDER_UPDATED_TASK","PROVIDER_DELETED_TASK","PROVIDER_COMPLETED_TASK","CLIENT_UPLOADED_LIBRARYITEM","CLIENT_UPDATED_LIBRARYITEM","CLIENT_DELETED_LIBRARYITEM","CLIENT_GIVEN_CONSENT_TO_PROVIDER","CLIENT_REJECTED_PROVIDER","CLIENT_CREATED_TASK_COMMENT","PROVIDER_CREATED_TASK_COMMENT","CLIENT_UPDATED_TASK_PROGRESS","PROVIDER_UPDATED_TASK_PROGRESS","CLIENT_COMPLETED_TASK","CLIENT_UPDATED_TASK","PROVIDER_DELETED_METRIC"]},"client":{"$ref":"#/definitions/Client"},"createdTime":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"libraryItem":{"$ref":"#/definitions/LibraryItem"},"notificationFor":{"$ref":"#/definitions/User"},"provider":{"$ref":"#/definitions/Provider"},"readStatus":{"type":"boolean"},"targetName":{"type":"string"},"task":{"$ref":"#/definitions/Task"},"taskComment":{"$ref":"#/definitions/TaskComment"},"taskProgress":{"$ref":"#/definitions/TaskProgress"}}},"Task":{"required":["id"],"properties":{"alertFromPhoneNumber":{"type":"string"},"beginDate":{"type":"string","format":"date-time"},"clientProviderRelation":{"$ref":"#/definitions/ClientProviderRelation"},"createdBy":{"$ref":"#/definitions/User"},"createdById":{"type":"integer","format":"int64"},"daysPerWeek":{"type":"integer","format":"int32"},"description":{"type":"string"},"endDate":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"relationId":{"type":"integer","format":"int64"},"status":{"type":"string","enum":["ACTIVE","REMOVED","COMPLETED"]},"taskReminders":{"type":"array","items":{"$ref":"#/definitions/TaskReminder"}},"taskThreshold":{"$ref":"#/definitions/TaskThreshold"},"taskType":{"type":"string","enum":["TASK","METRIC"]},"templateId":{"type":"integer","format":"int64"},"timesPerDay":{"type":"integer","format":"int32"},"title":{"type":"string"},"useGenericTextForReminders":{"type":"boolean"}}},"SecurityQuestion":{"required":["id"],"properties":{"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"question":{"type":"string","description":"Security question definition"}}},"Provider":{"required":["fullName","id","status","type","userName"],"properties":{"addressData":{"type":"array","description":"Set with information about user's addresses","items":{"$ref":"#/definitions/AddressData"}},"dob":{"type":"string","format":"date-time","description":"User's date of birth"},"eulaAccepted":{"type":"boolean"},"fullName":{"type":"string","description":"Full Name"},"gender":{"type":"string","description":"Represents user's gender","enum":["UN_KNOWN","MALE","FEMALE"]},"hideHints":{"type":"boolean"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"licenses":{"type":"array","description":"Set of provider licences info","items":{"$ref":"#/definitions/ProviderLicenseInfo"}},"newPassword":{"type":"string"},"organizations":{"type":"array","description":"Set of organizations to which this user belongs","items":{"$ref":"#/definitions/Organization"}},"passwordExpired":{"type":"boolean","description":"Defines if user password is expired or not"},"privacyStmtRcvd":{"type":"boolean"},"providerInformation":{"description":"Information about provider","$ref":"#/definitions/ProviderInformation"},"registrationComment":{"type":"string"},"registrationFailureText":{"type":"string"},"rootFolder":{"description":"Root folder for storing media files","$ref":"#/definitions/UserFolder"},"status":{"type":"string","description":"Status of registration","enum":["REGISTRATION_PENDING","ACTIVE","INACTIVE","REGISTRATION_DENIED"]},"type":{"type":"string","description":"Represents type of user","enum":["ADMINISTRATOR","PROVIDER","CLIENT"]},"userName":{"type":"string","description":"Unique user name"},"userSecurityQuestions":{"type":"array","description":"List of user's security questions","items":{"$ref":"#/definitions/UserSecurityQuestion"}}}},"ClientProviderRelation":{"required":["id"],"properties":{"client":{"$ref":"#/definitions/Client"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"initials":{"type":"string"},"provider":{"$ref":"#/definitions/Provider"},"status":{"type":"string","enum":["PENDING","ACTIVE","REJECTED","TERMINATED"]}}},"ContactUs":{"properties":{"availability":{"type":"string"},"company":{"type":"string"},"email":{"type":"string"},"message":{"type":"string"},"name":{"type":"string"},"phone":{"type":"string"},"website":{"type":"string"}}},"MetricRateDto":{"properties":{"avg":{"type":"number","format":"double"},"max":{"type":"integer","format":"int32"},"min":{"type":"integer","format":"int32"}}},"LibraryItemTagId":{"properties":{"libraryItem":{"$ref":"#/definitions/LibraryItem"},"tag":{"$ref":"#/definitions/Tag"}}},"UserSecurityQuestion":{"required":["answer","id"],"properties":{"answer":{"type":"string","description":"Answer for security question"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"securityQuestion":{"$ref":"#/definitions/SecurityQuestion"}}},"TaskDto":{"properties":{"beginDate":{"type":"string","format":"date-time"},"createdById":{"type":"integer","format":"int64"},"daysPerWeek":{"type":"integer","format":"int32"},"description":{"type":"string"},"endDate":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64"},"relationId":{"type":"integer","format":"int64"},"status":{"type":"string","enum":["ACTIVE","REMOVED","COMPLETED"]},"taskReminders":{"type":"array","items":{"$ref":"#/definitions/TaskReminder"}},"taskType":{"type":"string","enum":["TASK","METRIC"]},"templateId":{"type":"integer","format":"int64"},"timesPerDay":{"type":"integer","format":"int32"},"title":{"type":"string"}}},"AbstractTask":{"required":["id"],"properties":{"alertFromPhoneNumber":{"type":"string"},"beginDate":{"type":"string","format":"date-time"},"daysPerWeek":{"type":"integer","format":"int32"},"description":{"type":"string"},"endDate":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"taskReminders":{"type":"array","items":{"$ref":"#/definitions/TaskReminder"}},"taskThreshold":{"$ref":"#/definitions/TaskThreshold"},"taskType":{"type":"string","enum":["TASK","METRIC"]},"timesPerDay":{"type":"integer","format":"int32"},"title":{"type":"string"},"useGenericTextForReminders":{"type":"boolean"}}},"ProviderInformation":{"required":["id","subscriptionType"],"properties":{"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"noOfClientsServed":{"type":"integer","format":"int32"},"practiceSettings":{"type":"array","items":{"type":"string"}},"referredBy":{"type":"string"},"specialization":{"type":"string","description":"Theoretical orientation and/or specialization (text box, can write about 6 words)"},"subscriptionType":{"type":"string","description":"Subscription type of provider","enum":["FREE","BASIC","STANDARD","PREMIUM"]},"webAddress":{"type":"string","description":"URL of provider's website"}}},"TaskTemplateTagId":{"properties":{"tag":{"$ref":"#/definitions/Tag"},"template":{"$ref":"#/definitions/TaskTemplate"}}},"TaskTemplate":{"required":["id"],"properties":{"alertFromPhoneNumber":{"type":"string"},"assignedTags":{"type":"array","items":{"$ref":"#/definitions/Tag"}},"beginDate":{"type":"string","format":"date-time"},"daysPerWeek":{"type":"integer","format":"int32"},"delayBeginDate":{"type":"integer","format":"int32"},"description":{"type":"string"},"duration":{"type":"integer","format":"int32"},"endDate":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"organizations":{"type":"array","items":{"$ref":"#/definitions/Organization"}},"status":{"type":"string","enum":["ACTIVE","REMOVED","COMPLETED"]},"suggestedTags":{"type":"array","items":{"$ref":"#/definitions/Tag"}},"taskReminders":{"type":"array","items":{"$ref":"#/definitions/TaskReminder"}},"taskThreshold":{"$ref":"#/definitions/TaskThreshold"},"taskType":{"type":"string","enum":["TASK","METRIC"]},"timesPerDay":{"type":"integer","format":"int32"},"title":{"type":"string"},"useGenericTextForReminders":{"type":"boolean"}}},"TaskThresholdBadgeDto":{"properties":{"clientId":{"type":"integer","format":"int64"},"datePerformed":{"type":"string","format":"date-time"},"description":{"type":"string"},"numberOftimes":{"type":"integer","format":"int32"},"taskId":{"type":"integer","format":"int64"},"thresholdCondition":{"type":"string","enum":["SILENCE","LESS_THAN_OR_EQUALS","GREAT_THAN_OR_EQUALS"]},"thresholdLimit":{"type":"integer","format":"int32"},"title":{"type":"string"}}},"ProviderLicenseInfo":{"required":["id","licenseNumber","licenseState","licenseType"],"properties":{"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"licenseNumber":{"type":"string","description":"Number of provider license"},"licenseState":{"type":"string","description":"State of provider license"},"licenseType":{"type":"string","description":"Type of provider license"}}},"DiagramSeria":{"properties":{"label":{"type":"string"},"x":{"type":"string","format":"date-time"},"y":{"type":"integer","format":"int32"}}},"Client":{"required":["fullName","id","status","type","userName"],"properties":{"addressData":{"type":"array","description":"Set with information about user's addresses","items":{"$ref":"#/definitions/AddressData"}},"dob":{"type":"string","format":"date-time","description":"User's date of birth"},"eulaAccepted":{"type":"boolean"},"fullName":{"type":"string","description":"Full Name"},"gender":{"type":"string","description":"Represents user's gender","enum":["UN_KNOWN","MALE","FEMALE"]},"hideHints":{"type":"boolean"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"newPassword":{"type":"string"},"notificationTimeZone":{"type":"string","description":"Represents notification time offset in hours","enum":["PST","MST","CST","EST"]},"notificationTypes":{"type":"array","description":"Notification types that should be sent to the client","items":{"type":"string","enum":["EMAIL","SMS","PUSH"]}},"organizations":{"type":"array","description":"Set of organizations to which this user belongs","items":{"$ref":"#/definitions/Organization"}},"passwordExpired":{"type":"boolean","description":"Defines if user password is expired or not"},"privacyStmtRcvd":{"type":"boolean"},"registrationComment":{"type":"string"},"registrationFailureText":{"type":"string"},"rootFolder":{"description":"Root folder for storing media files","$ref":"#/definitions/UserFolder"},"status":{"type":"string","description":"Status of registration","enum":["REGISTRATION_PENDING","ACTIVE","INACTIVE","REGISTRATION_DENIED"]},"tags":{"type":"array","description":"Tags applied to the client","items":{"$ref":"#/definitions/Tag"}},"type":{"type":"string","description":"Represents type of user","enum":["ADMINISTRATOR","PROVIDER","CLIENT"]},"userName":{"type":"string","description":"Unique user name"},"userSecurityQuestions":{"type":"array","description":"List of user's security questions","items":{"$ref":"#/definitions/UserSecurityQuestion"}}}},"TaskComment":{"required":["id"],"properties":{"comment":{"type":"string"},"createdBy":{"$ref":"#/definitions/User"},"dateCreated":{"type":"string","format":"date-time"},"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"task":{"$ref":"#/definitions/Task"}}},"Iterable«TaskDiagramDto»":{},"Page«LibraryItem»":{"properties":{"content":{"type":"array","items":{"$ref":"#/definitions/LibraryItem"}},"first":{"type":"boolean"},"firstPage":{"type":"boolean"},"last":{"type":"boolean"},"lastPage":{"type":"boolean"},"number":{"type":"integer","format":"int32"},"numberOfElements":{"type":"integer","format":"int32"},"size":{"type":"integer","format":"int32"},"sort":{"$ref":"#/definitions/Sort"},"totalElements":{"type":"integer","format":"int64"},"totalPages":{"type":"integer","format":"int32"}}},"Iterable«MetricDiagramDto»":{},"OrganizationRegistration":{"properties":{"adminEmail":{"type":"string"},"adminName":{"type":"string"},"domainName":{"type":"string"},"organizationName":{"type":"string"},"webSite":{"type":"string"}}},"Ratings":{"properties":{"avgClientRating":{"type":"number","format":"double"},"avgProviderRating":{"type":"number","format":"double"},"countClientRating":{"type":"integer","format":"int64"},"countProviderRating":{"type":"integer","format":"int64"}}},"Iterable«UserRating»":{},"TaskDiagramDto":{"properties":{"series":{"$ref":"#/definitions/Collection«DiagramSeria»"},"task":{"$ref":"#/definitions/TaskDto"},"taskRate":{"type":"integer","format":"int32"}}},"Iterable«TagClass»":{},"TagClass":{"required":["id","name"],"properties":{"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"name":{"type":"string","description":"tag class name"},"organizations":{"type":"array","description":"List of organization that has access to this tag class","items":{"$ref":"#/definitions/Organization"}},"tags":{"type":"array","description":"List of all tags that belongs to this tag class","items":{"$ref":"#/definitions/Tag"}}}},"Iterable«ContentItem»":{},"Page«ContentItem»":{"properties":{"content":{"type":"array","items":{"$ref":"#/definitions/ContentItem"}},"first":{"type":"boolean"},"firstPage":{"type":"boolean"},"last":{"type":"boolean"},"lastPage":{"type":"boolean"},"number":{"type":"integer","format":"int32"},"numberOfElements":{"type":"integer","format":"int32"},"size":{"type":"integer","format":"int32"},"sort":{"$ref":"#/definitions/Sort"},"totalElements":{"type":"integer","format":"int64"},"totalPages":{"type":"integer","format":"int32"}}},"Collection«DiagramSeria»":{"properties":{"empty":{"type":"boolean"}}},"Iterable«ClientProviderLibraryItemRelation»":{},"MetricDiagramDto":{"properties":{"avg":{"type":"number","format":"double"},"max":{"type":"integer","format":"int32"},"metric":{"$ref":"#/definitions/MetricDto"},"min":{"type":"integer","format":"int32"},"series":{"type":"array","items":{"$ref":"#/definitions/DiagramSeria"}}}},"UserRating":{"required":["id"],"properties":{"id":{"type":"integer","format":"int64","description":"Auto-generated entity identifier","readOnly":true},"libraryItem":{"$ref":"#/definitions/LibraryItem"},"ratedBy":{"$ref":"#/definitions/User"},"rating":{"type":"integer","format":"int32"}}}}}